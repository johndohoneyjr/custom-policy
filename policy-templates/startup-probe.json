{
    "properties": {
      "displayName": "Ensure cluster containers have startup probes configured",
      "policyType": "Custom",
      "mode": "Microsoft.Kubernetes.Data",
      "description": "This policy enforces that all pods have a readiness and/or liveness probes configured. Probe Types can be any of tcpSocket, httpGet and exec. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For instructions on using this policy, visit https://aka.ms/kubepolicydoc.",
      "parameters": {
        "effect": {
          "type": "String",
          "metadata": {
            "displayName": "Effect",
            "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
            "portalReview": true
          },
          "allowedValues": [
            "Audit",
            "Deny",
            "Disabled"
          ],
          "defaultValue": "Audit"
        },
        "excludedNamespaces": {
          "type": "Array",
          "metadata": {
            "displayName": "Namespace exclusions",
            "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
          },
          "defaultValue": [
            "kube-system",
            "gatekeeper-system",
            "azure-arc"
          ]
        },
        "namespaces": {
          "type": "Array",
          "metadata": {
            "displayName": "Namespace inclusions",
            "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
          },
          "defaultValue": []
        },
        "labelSelector": {
          "type": "Object",
          "metadata": {
            "displayName": "Kubernetes label selector",
            "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
          },
          "defaultValue": {},
          "schema": {
            "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
            "type": "object",
            "properties": {
              "matchLabels": {
                "description": "matchLabels is a map of {key,value} pairs.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "minProperties": 1
              },
              "matchExpressions": {
                "description": "matchExpressions is a list of values, a key, and an operator.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "key is the label key that the selector applies to.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "operator represents a key's relationship to a set of values.",
                      "type": "string",
                      "enum": [
                        "In",
                        "NotIn",
                        "Exists",
                        "DoesNotExist"
                      ]
                    },
                    "values": {
                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "key",
                    "operator"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            },
            "additionalProperties": false
          }
        },
        "requiredProbes": {
          "type": "Array",
          "metadata": {
            "displayName": "Required probes list",
            "description": "The list of probes that are required to be defined on a container. Kubernetes currently supports 'livenessProbe', 'readinessProbe', and 'startupProbe'.",
            "portalReview": true
          },
          "defaultValue": [
            "startupProbe"
          ]
        },
        "excludedContainers": {
          "type": "Array",
          "metadata": {
            "displayName": "Containers exclusions",
            "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
          },
          "defaultValue": []
        },
        "excludedImages": {
          "type": "Array",
          "metadata": {
            "displayName": "Image exclusions",
            "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
            "portalReview": true
          },
          "defaultValue": []
        }
      },
      "policyRule": {
        "if": {
          "field": "type",
          "in": [
            "Microsoft.Kubernetes/connectedClusters",
            "Microsoft.ContainerService/managedClusters"
          ]
        },
        "then": {
          "effect": "[parameters('effect')]",
          "details": {
            "templateInfo": {
              "sourceType": "PublicURL",
              "url": "https://store.policy.core.windows.net/kubernetes/container-enforce-probes/v2/template.yaml"
            },
            "apiGroups": [
              ""
            ],
            "kinds": [
              "Pod"
            ],
            "excludedNamespaces": "[parameters('excludedNamespaces')]",
            "namespaces": "[parameters('namespaces')]",
            "labelSelector": "[parameters('labelSelector')]",
            "values": {
              "enforceProbes": "[parameters('requiredProbes')]",
              "excludedContainers": "[parameters('excludedContainers')]",
              "excludedImages": "[parameters('excludedImages')]"
            }
          }
        }
      }
    }
  }